// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	public enum MediaController_Status : int
	{
	};
	
	[InterfaceVersion("CLIENTMUSIC_INTERFACE_VERSION001")]
	public interface IClientMusic
	{
		[VTableSlot(0)]
		bool BIsEnabled();
		[VTableSlot(1)]
		void Enable(bool bUnk);
		[VTableSlot(2)]
		void EnableCrawlLogging(bool bUnk);
		[VTableSlot(3)]
		bool BIsPlaying();
		[VTableSlot(4)]
		Int32 GetQueueCount();
		[VTableSlot(5)]
		Int32 GetCurrentQueueEntry();
		[VTableSlot(6)]
		bool GetQueueEntryURI(Int32 iIndex, StringBuilder arg1, Int32 arg2);
		[VTableSlot(7)]
		bool GetQueueEntryData(Int32 iIndex, StringBuilder arg1, Int32 arg2, StringBuilder arg3, Int32 arg4, StringBuilder arg5, Int32 arg6);
		[VTableSlot(8)]
		void EmptyQueue();
		[VTableSlot(9)]
		void RemoveQueueEntry(Int32 iIndex, bool bUnk);
		[VTableSlot(10)]
		void AddAlbumToQueue(string arg0, bool arg1, bool arg2);
		[VTableSlot(11)]
		void AddTrackToQueue(string arg0, bool arg1, bool arg2, bool arg3);
		[VTableSlot(12)]
		AudioPlayback_Status GetPlaybackStatus();
		[VTableSlot(13)]
		void SetPlayingLooped(bool bPlayingLooped);
		[VTableSlot(14)]
		bool IsPlayingLooped();
		[VTableSlot(15)]
		void SetPlayingShuffled(bool bPlayingShuffled);
		[VTableSlot(16)]
		bool IsPlayingShuffled();
		[VTableSlot(17)]
		void Play();
		[VTableSlot(18)]
		void Pause();
		[VTableSlot(19)]
		void Stop();
		[VTableSlot(20)]
		void PlayPrevious();
		[VTableSlot(21)]
		void PlayEntry(Int32 arg0);
		[VTableSlot(22)]
		void SetVolume(float flVolume);
		[VTableSlot(23)]
		float GetVolume();
		[VTableSlot(24)]
		void ResetLocalLibrary();
		[VTableSlot(25)]
		MediaController_Status GetStatusLocalLibrary();
		[VTableSlot(26)]
		void SaveLocalLibraryDirectorySettings();
		[VTableSlot(27)]
		Int32 GetLocalLibraryDirectoryEntryCount();
		[VTableSlot(28)]
		bool GetLocalLibraryDirectoryEntry(Int32 arg0, StringBuilder arg1, Int32 arg2);
		[VTableSlot(29)]
		void AddLocalLibraryDirectoryEntry(string arg0);
		[VTableSlot(30)]
		void ResetLocalLibraryDirectories(bool arg0);
		[VTableSlot(31)]
		bool GetDefaultLocalLibraryDirectory(StringBuilder arg0, Int32 arg1);
		[VTableSlot(32)]
		void LocalLibraryStopCrawling();
		[VTableSlot(33)]
		void UpdateLocalLibraryDirectoriesToCrawl();
		[VTableSlot(34)]
		bool BLocalLibraryIsCrawling();
		[VTableSlot(35)]
		void CrawlAlbum(string arg0);
		[VTableSlot(36)]
		void CrawlTrack(string arg0);
		[VTableSlot(37)]
		Int32 GetLocalLibraryAlbumCount();
		[VTableSlot(38)]
		bool GetLocalLibraryAlbumKey(Int32 arg0, StringBuilder arg1, Int32 arg2);
		[VTableSlot(39)]
		bool GetLocalLibraryAlbumEntry(string arg0, StringBuilder arg1, Int32 arg2, StringBuilder arg3, Int32 arg4, ref Int32 arg5, ref bool arg6);
		[VTableSlot(40)]
		bool GetLocalLibraryAlbumTrackEntry(string arg0, Int32 arg1, StringBuilder arg2, Int32 arg3, ref Int32 arg4, StringBuilder arg5, Int32 arg6);
		[VTableSlot(41)]
		Int32 GetLocalLibraryTrackCount();
		[VTableSlot(42)]
		bool GetLocalLibraryAlbumTrackKey(string arg0, Int32 arg1, StringBuilder arg2, Int32 arg3);
		[VTableSlot(43)]
		Int32 GetLocalLibraryTrackCountForAlbum(string arg0);
		[VTableSlot(44)]
		Int32 GetLocalLibraryArtistCount();
		[VTableSlot(45)]
		bool GetLocalLibraryArtistName(Int32 arg0, StringBuilder arg1, Int32 arg2);
		[VTableSlot(46)]
		Int32 GetLocalLibraryAlbumCountForArtistName(string arg0);
		[VTableSlot(47)]
		bool GetLocalLibraryArtistAlbumKey(string arg0, Int32 arg1, StringBuilder arg2, Int32 arg3);
		[VTableSlot(48)]
		void StartUsingSpotify();
		[VTableSlot(49)]
		void StopUsingSpotify();
		[VTableSlot(50)]
		MediaController_Status GetStatusSpotify();
		[VTableSlot(51)]
		void LoginSpotify(string arg0, string arg1);
		[VTableSlot(52)]
		void ReloginSpotify();
		[VTableSlot(53)]
		string GetCurrentUserSpotify();
		[VTableSlot(54)]
		void ForgetCurrentUserSpotify();
		[VTableSlot(55)]
		void LogoutSpotify();
		[VTableSlot(56)]
		void DumpStatusToConsole();
	};
}
