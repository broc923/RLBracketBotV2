// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("SteamGameServer002")]
	public interface ISteamGameServer002
	{
		[VTableSlot(0)]
		void LogOn();
		[VTableSlot(1)]
		void LogOff();
		[VTableSlot(2)]
		bool BLoggedOn();
		[VTableSlot(3)]
		void SetSpawnCount(UInt32 ucSpawn);
		[VTableSlot(4)]
		bool GetSteam2GetEncryptionKeyToSendToNewClient(Byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[VTableSlot(5)]
		bool SendSteam2UserConnect(UInt32 unUserID, Byte[] pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, Byte[] pvCookie, UInt32 cubCookie);
		[VTableSlot(6)]
		bool SendSteam3UserConnect(CSteamID steamID, UInt32 unIPPublic, Byte[] pvCookie, UInt32 cubCookie);
		[VTableSlot(7)]
		bool RemoveUserConnect(UInt32 unUserID);
		[VTableSlot(8)]
		bool SendUserDisconnect(CSteamID steamID, UInt32 unUserID);
		[VTableSlot(9)]
		bool SendUserStatusResponse(CSteamID steamID, Int32 nSecondsConnected, Int32 nSecondsSinceLast);
		[VTableSlot(10)]
		bool Obsolete_GSSetStatus(Int32 nAppIdServed, UInt32 unServerFlags, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, Int32 unGamePort, string pchServerName, string pchGameDir, string pchMapName, string pchVersion);
		[VTableSlot(11)]
		bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pchMapName);
		[VTableSlot(12)]
		bool BSecure();
		[VTableSlot(13)]
		CSteamID GetSteamID();
		[VTableSlot(14)]
		bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt32 unGamePort, string pchGameDir, string pchVersion);
		[VTableSlot(15)]
		bool SetServerType2(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, bool bLANMode);
		[VTableSlot(16)]
		bool UpdateStatus2(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[VTableSlot(17)]
		bool CreateUnauthenticatedUser(ref CSteamID pSteamID);
		[VTableSlot(18)]
		bool SetUserData(CSteamID steamIDUser, string pchPlayerName, UInt32 uScore);
		[VTableSlot(19)]
		void UpdateSpectatorPort(UInt16 unSpectatorPort);
		[VTableSlot(20)]
		void SetGameType(string pchGameType);
	};
}
