// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("SteamGameServer003")]
	public interface ISteamGameServer003
	{
		[VTableSlot(0)]
		void LogOn();
		[VTableSlot(1)]
		void LogOff();
		[VTableSlot(2)]
		bool BLoggedOn();
		[VTableSlot(3)]
		bool BSecure();
		[VTableSlot(4)]
		CSteamID GetSteamID();
		[VTableSlot(5)]
		bool GetSteam2GetEncryptionKeyToSendToNewClient(Byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[VTableSlot(6)]
		bool SendUserConnect(UInt32 arg0, UInt32 arg1, UInt16 arg2, Byte[] arg3, UInt32 arg4);
		[VTableSlot(7)]
		bool RemoveUserConnect(UInt32 unUserID);
		[VTableSlot(8)]
		bool SendUserDisconnect(CSteamID steamID, UInt32 unUserID);
		[VTableSlot(9)]
		void SetSpawnCount(UInt32 ucSpawn);
		[VTableSlot(10)]
		bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, bool bLANMode);
		[VTableSlot(11)]
		bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[VTableSlot(12)]
		bool CreateUnauthenticatedUser(ref CSteamID pSteamID);
		[VTableSlot(13)]
		bool SetUserData(CSteamID steamIDUser, string pchPlayerName, UInt32 uScore);
		[VTableSlot(14)]
		void UpdateSpectatorPort(UInt16 unSpectatorPort);
		[VTableSlot(15)]
		void SetGameType(string pchGameType);
		[VTableSlot(16)]
		bool GetUserAchievementStatus(CSteamID steamID, string pchAchievementName);
	};
}
