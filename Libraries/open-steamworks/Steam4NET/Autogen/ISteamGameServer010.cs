// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("SteamGameServer010")]
	public interface ISteamGameServer010
	{
		[VTableSlot(0)]
		void LogOn();
		[VTableSlot(1)]
		void LogOff();
		[VTableSlot(2)]
		bool BLoggedOn();
		[VTableSlot(3)]
		bool BSecure();
		[VTableSlot(4)]
		CSteamID GetSteamID();
		[VTableSlot(5)]
		bool SendUserConnectAndAuthenticate(UInt32 unIPClient, Byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref CSteamID pSteamIDUser);
		[VTableSlot(6)]
		CSteamID CreateUnauthenticatedUserConnection();
		[VTableSlot(7)]
		void SendUserDisconnect(CSteamID steamIDUser);
		[VTableSlot(8)]
		bool BUpdateUserData(CSteamID steamIDUser, string pchPlayerName, UInt32 uScore);
		[VTableSlot(9)]
		bool BSetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, bool bLANMode);
		[VTableSlot(10)]
		void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[VTableSlot(11)]
		void UpdateSpectatorPort(UInt16 unSpectatorPort);
		[VTableSlot(12)]
		void SetGameTags(string pchGameTags);
		[VTableSlot(13)]
		void GetGameplayStats();
		[VTableSlot(14)]
		UInt64 GetServerReputation();
		[VTableSlot(15)]
		bool RequestUserGroupStatus(CSteamID steamIDUser, CSteamID steamIDGroup);
		[VTableSlot(16)]
		UInt32 GetPublicIP();
		[VTableSlot(17)]
		void SetGameData(string pchGameData);
		[VTableSlot(18)]
		EUserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, UInt32 appID);
		[VTableSlot(19)]
		UInt32 GetAuthSessionTicket(Byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		[VTableSlot(20)]
		EBeginAuthSessionResult BeginAuthSession(Byte[] pAuthTicket, Int32 cbAuthTicket, CSteamID steamID);
		[VTableSlot(21)]
		void EndAuthSession(CSteamID steamID);
		[VTableSlot(22)]
		void CancelAuthTicket(UInt32 hAuthTicket);
	};
}
