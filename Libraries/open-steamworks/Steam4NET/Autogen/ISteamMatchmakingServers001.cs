// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("SteamMatchMakingServers001")]
	public interface ISteamMatchmakingServers001
	{
		[VTableSlot(0)]
		void RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(1)]
		void RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(2)]
		void RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(3)]
		void RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(4)]
		void RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(5)]
		void RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		[VTableSlot(6)]
		gameserveritem_t GetServerDetails(EMatchMakingType eType, Int32 iServer);
		[VTableSlot(7)]
		void CancelQuery(EMatchMakingType eType);
		[VTableSlot(8)]
		void RefreshQuery(EMatchMakingType eType);
		[VTableSlot(9)]
		bool IsRefreshing(EMatchMakingType eType);
		[VTableSlot(10)]
		Int32 GetServerCount(EMatchMakingType eType);
		[VTableSlot(11)]
		void RefreshServer(EMatchMakingType eType, Int32 iServer);
		[VTableSlot(12)]
		Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		[VTableSlot(13)]
		Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		[VTableSlot(14)]
		Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		[VTableSlot(15)]
		void CancelServerQuery(Int32 hServerQuery);
	};
}
