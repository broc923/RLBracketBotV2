// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("SteamUser005")]
	public interface ISteamUser005
	{
		[VTableSlot(0)]
		Int32 GetHSteamUser();
		[VTableSlot(1)]
		void LogOn(CSteamID steamID);
		[VTableSlot(2)]
		void LogOff();
		[VTableSlot(3)]
		bool BLoggedOn();
		[VTableSlot(4)]
		ELogonState GetLogonState();
		[VTableSlot(5)]
		bool BConnected();
		[VTableSlot(6)]
		CSteamID GetSteamID();
		[VTableSlot(7)]
		bool IsVACBanned(EVACBan eVACBan);
		[VTableSlot(8)]
		bool RequireShowVACBannedMessage(EVACBan eVACBan);
		[VTableSlot(9)]
		void AcknowledgeVACBanning(EVACBan eVACBan);
		[VTableSlot(10)]
		void SetSteam2Ticket(Byte[] pubTicket, Int32 cubTicket);
		[VTableSlot(11)]
		void AddServerNetAddress(UInt32 unIP, UInt16 unPort);
		[VTableSlot(12)]
		bool SetEmail(string pchEmail);
		[VTableSlot(13)]
		bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[VTableSlot(14)]
		bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, StringBuilder pchValue, Int32 cbValue);
		[VTableSlot(15)]
		bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[VTableSlot(16)]
		bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[VTableSlot(17)]
		Int32 InitiateGameConnection(Byte[] pBlob, Int32 cbMaxBlob, CSteamID steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, bool bSecure);
		[VTableSlot(18)]
		void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer);
		[VTableSlot(19)]
		void SetSelfAsPrimaryChatDestination();
		[VTableSlot(20)]
		bool IsPrimaryChatDestination();
		[VTableSlot(21)]
		void RequestLegacyCDKey(UInt32 iAppID);
		[VTableSlot(22)]
		bool SendGuestPassByEmail(string pchEmailAccount, UInt64 gidGuestPassID, bool bResending);
		[VTableSlot(23)]
		bool SendGuestPassByAccountID(UInt32 uAccountID, UInt64 gidGuestPassID, bool bResending);
		[VTableSlot(24)]
		bool AckGuestPass(string pchGuestPassCode);
		[VTableSlot(25)]
		bool RedeemGuestPass(string pchGuestPassCode);
		[VTableSlot(26)]
		UInt32 GetGuestPassToGiveCount();
		[VTableSlot(27)]
		UInt32 GetGuestPassToRedeemCount();
		[VTableSlot(28)]
		UInt32 GetGuestPassLastUpdateTime();
		[VTableSlot(29)]
		bool GetGuestPassToGiveInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed, StringBuilder pchRecipientAddress, Int32 cRecipientAddressSize);
		[VTableSlot(30)]
		bool GetGuestPassToRedeemInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed);
		[VTableSlot(31)]
		bool GetGuestPassToRedeemSenderAddress(UInt32 nPassIndex, StringBuilder pchSenderAddress, Int32 cSenderAddressSize);
		[VTableSlot(32)]
		bool GetGuestPassToRedeemSenderName(UInt32 nPassIndex, StringBuilder pchSenderName, Int32 cSenderNameSize);
		[VTableSlot(33)]
		void AcknowledgeMessageByGID(string pchMessageGID);
		[VTableSlot(34)]
		bool SetLanguage(string pchLanguage);
		[VTableSlot(35)]
		void TrackAppUsageEvent(CGameID gameID, EAppUsageEvent eAppUsageEvent, string pchExtraInfo);
		[VTableSlot(36)]
		void SetAccountName(string pchAccountName);
		[VTableSlot(37)]
		void SetPassword(string pchPassword);
		[VTableSlot(38)]
		void SetAccountCreationTime(UInt32 rtime32Time);
	};
}
