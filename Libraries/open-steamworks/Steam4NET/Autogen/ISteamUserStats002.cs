// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[InterfaceVersion("STEAMUSERSTATS_INTERFACE_VERSION002")]
	public interface ISteamUserStats002
	{
		[VTableSlot(0)]
		UInt32 GetNumStats(CGameID nGameID);
		[VTableSlot(1)]
		string GetStatName(CGameID nGameID, UInt32 iStat);
		[VTableSlot(2)]
		ESteamUserStatType GetStatType(CGameID nGameID, string pchName);
		[VTableSlot(3)]
		UInt32 GetNumAchievements(CGameID nGameID);
		[VTableSlot(4)]
		string GetAchievementName(CGameID nGameID, UInt32 iAchievement);
		[VTableSlot(5)]
		bool RequestCurrentStats(CGameID nGameID);
		[VTableSlot(6)]
		bool GetStat(CGameID nGameID, string pchName, ref float pData);
		[VTableSlot(7)]
		bool GetStat(CGameID nGameID, string pchName, ref Int32 pData);
		[VTableSlot(8)]
		bool SetStat(CGameID nGameID, string pchName, float fData);
		[VTableSlot(9)]
		bool SetStat(CGameID nGameID, string pchName, Int32 nData);
		[VTableSlot(10)]
		bool UpdateAvgRateStat(CGameID nGameID, string pchName, UInt32 nCountThisSession, double dSessionLength);
		[VTableSlot(11)]
		bool GetAchievement(CGameID nGameID, string pchName, ref bool pbAchieved);
		[VTableSlot(12)]
		bool SetAchievement(CGameID nGameID, string pchName);
		[VTableSlot(13)]
		bool ClearAchievement(CGameID nGameID, string pchName);
		[VTableSlot(14)]
		bool StoreStats(CGameID nGameID);
		[VTableSlot(15)]
		Int32 GetAchievementIcon(CGameID nGameID, string pchName);
		[VTableSlot(16)]
		string GetAchievementDisplayAttribute(CGameID nGameID, string pchName, string pchKey);
		[VTableSlot(17)]
		bool IndicateAchievementProgress(CGameID nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
	};
}
